apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.backend.config.name }}
data:
  DB_HOST: {{ .Values.backend.config.dbHost }}
  DB_PORT: "{{ .Values.backend.config.dbPort }}"
  DB_USER: {{ .Values.backend.config.dbUser }}
  DB_PASSWORD: {{ .Values.backend.config.dbPassword }}
  DB_NAME: {{ .Values.backend.config.dbName }}
  REDIS_URL: {{ .Values.backend.config.redisUrl }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backend.deploy.name }}
spec:
  replicas: {{ .Values.backend.deploy.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.backend.deploy.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.backend.deploy.name }}
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -z {{ .Values.backend.config.dbHost }} {{ .Values.backend.config.dbPort }}; do echo waiting for postgres; sleep 2; done']
        - name: wait-for-redis
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -z redis-master 6379; do echo waiting for redis; sleep 2; done']
      containers:
        - name: {{ .Values.backend.deploy.name }}
          image: {{ .Values.backend.deploy.image }}
          imagePullPolicy: {{ .Values.backend.deploy.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.backend.deploy.containerPort }}
          envFrom:
            - configMapRef:
                name: {{ .Values.backend.config.name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.backend.service.name }}
spec:
  selector:
    app: {{ .Values.backend.deploy.name }}
  ports:
    - protocol: {{ .Values.backend.service.protocol }}
      name: {{ .Values.backend.service.portName }}
      port: {{ .Values.backend.service.port }}
      targetPort: {{ .Values.backend.service.targetPort }}
  type: {{ .Values.backend.service.type }}
